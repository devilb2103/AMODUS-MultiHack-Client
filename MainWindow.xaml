<Window x:Class="AMODUS_MultiHack.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AMODUS_MultiHack"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="AMODUS V4" Height="450" Width="750" 
        WindowStyle="None" Background="#141619"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1c1e21"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1c1e21"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#141619"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#141619"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1c1e21"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1c1e21"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#141619"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#141619"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1c1e21"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1c1e21"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#141619"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#141619"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1c1e21"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1c1e21"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#141619"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#141619"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--the slider track porperties i needed-->
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="SliderThumb.Track.Background" StartPoint="1,0" EndPoint="0,1">
            <GradientStop Color="#491AB8" Offset="0.0"/>
            <GradientStop Color="#EC57A6" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" Fill="#491AB8" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="0" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="#AE4299"/>
                    <!--<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>-->
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="#491AB8"/>
                    <!--<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <!--<Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>-->
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border BorderThickness="3">
        <Border.BorderBrush>
            <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                <GradientStop Color="#491AB8" Offset="0.0"/>
                <GradientStop Color="#EC57A6" Offset="1"/>
            </LinearGradientBrush>
        </Border.BorderBrush>

        <!-- Main UI Starts From Here -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2.5*"/>
            </Grid.ColumnDefinitions>

            <!--The navigation bar-->

            <!--just for the shadow-->
            <StackPanel Grid.Column="0" Background="#141619">
                <StackPanel.Effect>
                    <DropShadowEffect BlurRadius="12" Direction="0" RenderingBias="Quality"/>
                </StackPanel.Effect>
            </StackPanel>

            <!--the actual navigation bar UI-->
            <StackPanel Grid.Column="0">

                <!--Title for mod menu-->
                <StackPanel MouseDown="TitleWindowDrag">
                    <TextBlock Text="AMODUS V6" FontSize="27" HorizontalAlignment="Center" Foreground="White" Margin="0,15,0,0" FontFamily="Roboto Thin" Loaded="UI_Loaded"/>
                    <TextBlock Text="Internal Mod Menu" FontSize="11" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>
                    <TextBlock Text="For Among Us 2020.12.9S" FontSize="11" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>
                </StackPanel>

                <!--Buttons-->
                <Button x:Name="GeneralButton" Content="General" Foreground="White" FontSize="21" BorderThickness="0" Background="#141619" Margin="0,21,0,0" Height="47" Style="{DynamicResource ButtonStyle1}" Click="CallGeneralTab" FontFamily="Roboto Thin"/>
                <Button x:Name="PlayerButton" Content="Player" Foreground="White" FontSize="21" BorderThickness="0" Background="#141619" Height="47" Style="{DynamicResource ButtonStyle2}" Click="CallPlayerTab" FontFamily="Roboto Thin"/>
                <Button x:Name="Appearance" Content="Appearance" Foreground="White" FontSize="21" BorderThickness="0" Background="#141619" Height="47" Style="{DynamicResource ButtonStyle3}" Click="CallAppearanceTab" FontFamily="Roboto Thin"/>
                <Button x:Name="MapButton" Content="Map" Foreground="White" FontSize="21" BorderThickness="0" Background="#141619" Height="47" Style="{DynamicResource ButtonStyle3}" Click="CallMapTab" FontFamily="Roboto Thin"/>
                <Button x:Name="GameButton" Content="Game" Foreground="White" FontSize="21" BorderThickness="0" Background="#141619" Height="47" Style="{DynamicResource ButtonStyle4}" Click="CallGameTab" FontFamily="Roboto Thin"/>
                <Button x:Name="StatsButton" Content="Stats" Foreground="White" FontSize="21" BorderThickness="0" Background="#141619" Height="47" Style="{DynamicResource ButtonStyle4}" Click="CallStatsTab" FontFamily="Roboto Thin"/>


                <!--by user-->
                <TextBlock Text="By devilb2103" FontSize="11" HorizontalAlignment="Center" Foreground="White" Margin="0,20,0,0" FontFamily="Roboto Thin"/>
                <TextBlock Text="Discord: Dev | devilb2103#3369" FontSize="11" HorizontalAlignment="Center" Foreground="White" Margin="0,0,0,0" FontFamily="Roboto Thin"/>
            </StackPanel>


            <!--The main UI starts from here-->
            <StackPanel Grid.Column="1">

                <!--Window buttons-->

                <Grid>
                    <Button HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFlatAccentButton}" Margin="0,0,0,0" Height="50" Width="50" Foreground="White" Click="CloseWindow">
                        <StackPanel>
                            <materialDesign:PackIcon HorizontalAlignment="Center" VerticalAlignment="Center" Kind="Close" Width="30" Height="30"/>
                        </StackPanel>
                    </Button>

                    <Button HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFlatAccentButton}" Margin="0,0,50,0" Height="50" Width="50" Foreground="White" Click="MinimizeWindow">
                        <StackPanel>
                            <materialDesign:PackIcon HorizontalAlignment="Center" VerticalAlignment="Center" Kind="WindowMinimize" Width="30" Height="30"/>
                        </StackPanel>
                    </Button>
                </Grid>



                <!--tab controller-->
                <TabControl x:Name="TabControl" Height="390" Margin="21,0,21,0" Background="Transparent" BorderThickness="0">



                    <!--General Tab Items-->
                    <TabItem Width="0" Height="0">
                        <StackPanel>
                            <TextBlock Text="General" FontSize="36" HorizontalAlignment="Center" Foreground="White" TextDecorations="{x:Null}" FontFamily="Roboto Thin"/>
                            <TextBlock Text="Speed" Foreground="White" FontSize="24" Margin="0,40,0,0" HorizontalAlignment="Center" FontFamily="Roboto Thin"/>
                            <Grid>

                                <!-- speed slider-->
                                <Slider x:Name="Speed_slider" Maximum="30" Minimum="0" SmallChange="1" Margin="90,10,135,0" BorderBrush="Transparent" Style="{DynamicResource SliderStyle1}" ValueChanged="Speed_slider_ValueChanged" IsSnapToTickEnabled="True"/>

                                <!-- speed textbox-->
                                <TextBox x:Name="Speed_Textbox" Margin="363,2,27,8" Cursor="IBeam" BorderThickness="0,0,0,2" Background="Transparent" BorderBrush="#491AB8" FontFamily="roboto thin" Foreground="White" TextChanged="Speed_Textbox_TextChanged" materialDesign:TextFieldAssist.UnderlineBrush="#C94AA3"/>

                            </Grid>

                            <Label Content="(Integers Only)" Foreground="Gray" HorizontalAlignment="Right" Margin="0,-12,35,0" FontSize="11"/>

                            
                            <TextBlock Text="Name" Foreground="White" FontSize="24" Margin="0,10,0,0" HorizontalAlignment="Center" FontFamily="Roboto Thin"/>
                            
                            <Grid>
                                
                                <!-- name textbox-->
                                <TextBox x:Name="setName_textBox" Margin="120,2,165,8" Cursor="IBeam" BorderThickness="0,0,0,2" Background="Transparent" BorderBrush="#491AB8" FontFamily="roboto thin" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="#C94AA3"/>
                                <!-- Name button-->
                                <Button x:Name="setNameButton" Content="Set Name" Width="120" Height="27" Margin="330,10,0,0" BorderThickness="0" Click="changePlayerName">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>

                            </Grid>


                            <!--Override emergency Count-->
                            <Grid Grid.Column="1" Margin="0,30,0,0">
                                <TextBlock Text="Override Emergency Count" Foreground="White" Margin="0,10,10,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                <ToggleButton x:Name="EmergencyCountToggle" Margin="210,10,0,0" Checked="EmergencyCountToggle_Checked" Unchecked="EmergencyCountToggle_Unchecked"/>
                            </Grid>

                            <!--Override emergency Cooldown-->
                            <Grid Grid.Column="1">
                                <TextBlock Text="Override Emergency Cooldown" Foreground="White" Margin="0,10,35,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                <ToggleButton x:Name="EmergencyCooldownToggle" Margin="210,10,0,0" Checked="EmergencyCooldownToggle_Checked" Unchecked="EmergencyCooldownToggle_Unchecked"/>
                            </Grid>

                            <!--Enable Stellite View-->
                            <Grid Grid.Column="1">
                                <TextBlock Text="Satellite View" Foreground="White" Margin="105,10,35,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                <ToggleButton x:Name="SatelliteViewToggle" Margin="210,10,0,0" Checked="SatelliteViewToggle_Checked" Unchecked="SatelliteViewToggle_Unchecked"/>
                            </Grid>
                        </StackPanel>
                    </TabItem>



                    <!--Player Tab Items-->
                    <TabItem Width="0" Height="00">

                        <StackPanel>

                            <!-- title -->
                            <TextBlock Text="Player" Foreground="White" FontFamily="roboto thin" FontSize="36" HorizontalAlignment="Center"/>
                            <Grid Height="300">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Left column -->
                                <StackPanel Grid.Column="0" HorizontalAlignment="Right" Margin="0,0,258,-20" Grid.ColumnSpan="2">

                                    <!-- CrewMate Settings -->
                                    <TextBlock Text="Crewmate" Foreground="White" FontSize="24" Padding="3" Margin="0,5,0,0" HorizontalAlignment="Center" FontFamily="Roboto Thin"/>

                                    <Grid Grid.Column="0" Margin="0,-5,0,0">
                                        <TextBlock Text="Force Impostor" Foreground="White" Margin="0,10,30,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                        <ToggleButton x:Name="ForceImpostorToggle" Margin="120,10,0,0" Checked="ForceImpostorToggle_Checked" Unchecked="ForceImpostorToggle_Unchecked"/>
                                    </Grid>

                                    <Grid Grid.Column="0" Margin="0,0,0,0">
                                        <TextBlock Text="Reveal Impostor" Foreground="White" Margin="0,10,30,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                        <ToggleButton x:Name="RevealImpostorsToggle" Margin="120,10,0,0" Checked="RevealImpostorsToggle_Checked" Unchecked="RevealImpostorsToggle_Unchecked"/>
                                    </Grid>

                                    <Grid Grid.Column="0" Margin="0,0,0,0">
                                        <TextBlock Text="Force Crewmate" Foreground="White" Margin="0,10,30,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                        <ToggleButton x:Name="ForceCrewmateToggle" Margin="120,10,0,0" Checked="ForceCrewmateToggle_Checked" Unchecked="ForceCrewmateToggle_Unchecked"/>
                                    </Grid>

                                </StackPanel>


                                <!-- Right Column -->
                                <StackPanel Grid.Column="1" Margin="0,-15,0,0" HorizontalAlignment="Center" Width="242">

                                    <!-- CrewMate Settings -->
                                    <TextBlock Text="Impostor" Foreground="White" FontSize="24" Padding="3" Margin="0,21,0,0" HorizontalAlignment="Center" FontFamily="Roboto Thin"/>

                                    <Grid Grid.Column="0" Margin="0,-5,0,0">
                                        <TextBlock Text="Kill Other Impostor" Foreground="White" Margin="0,10,42,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                        <ToggleButton x:Name="KillOtherImpostorToggle" Margin="120,10,0,0" Checked="KillOtherImpostor_Checked" Unchecked="KillOtherImpostor_Unchecked"/>
                                    </Grid>

                                    <Grid Grid.Column="0" Margin="0,0,0,0">
                                        <TextBlock Text="Invisibility" Foreground="White" Margin="0,10,-10,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                        <ToggleButton x:Name="InvisibilityToggle" Margin="120,10,0,0" Checked="InvisibilityToggle_Checked" Unchecked="InvisibilityToggle_Unchecked"/>
                                    </Grid>
                                    <Label Content="(ReEnable after enetering vent)" Foreground="LightGray" FontSize="12" HorizontalAlignment="Center" FontFamily="roboto thin" Margin="0,0,0,0"/>

                                    <Grid Grid.Column="0" Margin="0,-5,0,0">
                                        <TextBlock Text="Override Kill Cooldown" Foreground="White" Margin="20,10,10,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14" FontFamily="roboto thin"/>
                                        <ToggleButton x:Name="KillCooldownToggle" Margin="120,10,0,0" Checked="KillCooldownToggle_Checked" Unchecked="KillCooldownToggle_Unchecked"/>
                                    </Grid>

                                    <Grid Grid.Column="0" Margin="0,-5,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="50*"/>
                                            <ColumnDefinition Width="71*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="Infinite Kill Distance" Foreground="White" Margin="38,11,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14" FontFamily="roboto thin" Grid.ColumnSpan="2"/>
                                        <ToggleButton x:Name="KillDistanceToggle" Margin="19.618,10,0,0" Grid.Column="1" Checked="KillDistanceToggle_Checked" Unchecked="KillDistanceToggle_Unchecked"/>
                                    </Grid>

                                </StackPanel>

                            </Grid>

                            <!-- PlayerMod Settings -->
                            <Grid Margin="0,115,0,0">
                                
                                <TextBlock Text="Player Mods" Foreground="White" FontSize="24" Padding="3" Margin="0,-235,0,0" HorizontalAlignment="Center" FontFamily="Roboto Thin"/>
                                
                                <!--left column-->
                                <StackPanel Margin="0,-192,190,0">
                                    
                                    <StackPanel>
                                        <Grid Grid.Column="0" Margin="0,-5,0,0">
                                            <TextBlock Text="Kill Player" Foreground="White" Margin="0,10,-10,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                            <ToggleButton x:Name="KillPlayerToggle" Margin="120,10,0,0" Checked="KillPlayerToggle_Checked" Unchecked="KillPlayerToggle_Unchecked"/>
                                        </Grid>

                                        <Grid Grid.Column="0" Margin="0,0,0,0">
                                            <TextBlock Text="Revive Player" Foreground="White" Margin="0,10,15,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                            <ToggleButton x:Name="RevivePlayerToggle" Margin="120,10,0,0" Checked="RevivePlayerToggle_Checked" Unchecked="RevivePlayerToggle_Unchecked"/>
                                        </Grid>

                                        <Grid Grid.Column="0" Margin="0,0,0,0">
                                            <TextBlock Text="Override Crew Vision" Foreground="White" Margin="0,10,60,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                            <ToggleButton x:Name="OverrideCrewVisionToggle" Margin="120,10,0,0" Checked="OverrideCrewVisionToggle_Checked" Unchecked="OverrideCrewVisionToggle_Unchecked"/>
                                        </Grid>

                                        <Grid Grid.Column="0" Margin="0,0,0,0">
                                            <TextBlock Text="Override Impostor Vision" Foreground="White" Margin="0,10,80,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                            <ToggleButton x:Name="OverrideImposterVisionToggle" Margin="120,10,0,0" Checked="OverrideImposterVisionToggle_Checked" Unchecked="OverrideImposterVisionToggle_Unchecked"/>
                                        </Grid>
                                    </StackPanel>
                                </StackPanel>

                                <!--right column-->
                                <StackPanel Margin="0,-192,-240,0">
                                    
                                    <StackPanel>
                                        <Grid Grid.Column="0" Margin="0,-5,0,0">
                                            <TextBlock Text="Show Ghosts" Foreground="White" Margin="0,10,15,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                            <ToggleButton x:Name="ShowGhosts" Margin="120,10,0,0" Checked="ShowGhosts_Checked" Unchecked="ShowGhosts_Unchecked"/>
                                        </Grid>

                                        <Grid Grid.Column="0" Margin="0,0,0,0">
                                            <TextBlock Text="Show Ghost Chats" Foreground="White" Margin="0,10,51,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontFamily="roboto thin"/>
                                            <ToggleButton x:Name="ShowGhostChats" Margin="120,10,0,0" Checked="ShowGhostChats_Checked" Unchecked="ShowGhostChats_Unchecked"/>
                                        </Grid>
                                        
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </StackPanel>

                    </TabItem>

                    <!--Color Hax Tab Items-->
                    <TabItem Width="0" Height="0">
                        <StackPanel>
                            <!-- Appearance Hacks -->

                            <TextBlock Text="Appearance Hacks" Foreground="White" FontFamily="roboto thin" FontSize="36" HorizontalAlignment="Center"/>

                            <Grid Grid.Column="0" Margin="0,25,0,0">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Left Column -->
                                <StackPanel Grid.Column="0" Margin="30,0,0,0">
                                    <Button x:Name="Red" Width="50" Height="50" Margin="0,10,0,0" Background="Red" BorderBrush="Black" Click="Red_Click"/>
                                    <Button x:Name="Pink" Width="50" Height="50" Margin="0,10,0,0" Background="HotPink" BorderBrush="Black" Click="Pink_Click"/>
                                    <Button x:Name="Black" Width="50" Height="50" Margin="0,10,0,0" Background="Black" BorderBrush="Black" Click="Black_Click"/>
                                    <Button x:Name="Brown" Width="50" Height="50" Margin="0,10,0,0" Background="SaddleBrown" BorderBrush="Black" Click="Brown_Click"/>
                                </StackPanel>

                                <StackPanel Grid.Column="1">
                                    <Button x:Name="Blue" Width="50" Height="50" Margin="0,10,0,0" Background="Blue" BorderBrush="Black" Click="Blue_Click"/>
                                    <Button x:Name="Orange" Width="50" Height="50" Margin="0,10,0,0" Background="OrangeRed" BorderBrush="Black" Click="Orange_Click"/>
                                    <Button x:Name="White" Width="50" Height="50" Margin="0,10,0,0" Background="White" BorderBrush="Black" Click="White_Click"/>
                                    <Button x:Name="Cyan" Width="50" Height="50" Margin="0,10,0,0" Background="Cyan" BorderBrush="Black" Click="Cyan_Click"/>
                                </StackPanel>
                                

                                <StackPanel Grid.Column="2" Margin="0,0,30,0">
                                    <Button x:Name="DGreen" Width="50" Height="50" Margin="0,10,0,0" Background="DarkGreen" BorderBrush="Black" Click="DGreen_Click"/>
                                    <Button x:Name="Yellow" Width="50" Height="50" Margin="0,10,0,0" Background="Yellow" BorderBrush="Black" Click="Yellow_Click"/>
                                    <Button x:Name="Purple" Width="50" Height="50" Margin="0,10,0,0" Background="Purple" BorderBrush="Black" Click="Purple_Click"/>
                                    <Button x:Name="LGreen" Width="50" Height="50" Margin="0,10,0,0" Background="Lime" BorderBrush="Black" Click="LGreen_Click"/>
                                </StackPanel>

                                <!-- Right Column -->
                                <StackPanel Grid.Column="3" HorizontalAlignment="Center">

                                    <Grid>
                                        <TextBlock Text="Rainbow Hack Toggle" Foreground="White" Margin="5,10,30,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14" FontFamily="roboto thin"/>
                                        <ToggleButton x:Name="RainbowHackToggle" Margin="150,10,0,0" Checked="RainbowHackToggle_Checked" Unchecked="RainbowHackToggle_Unchecked"/>
                                    </Grid>

                                    <Button x:Name="ChangeLobbyColorButton" Content="Change Lobby Color" Width="180" Height="27" Margin="0,10,0,0" HorizontalAlignment="Left" BorderThickness="0" Click="ChangeLobbyColorButton_Click">
                                        <Button.Background>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                                <GradientStop Color="#491ab8" Offset="0.0"/>
                                                <GradientStop Color="#ec57a6" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Button.Background>
                                    </Button>

                                    <Label Content="(Host Only)" Foreground="LightGray" FontSize="12" HorizontalAlignment="Center" FontFamily="roboto thin"/>

                                    <TextBox x:Name="ChangeLobbyNamesButton_Textbox" Cursor="IBeam" Margin ="0,30,0,0" BorderThickness="0,0,0,2" Background="Transparent" BorderBrush="#491AB8" FontFamily="roboto thin" Foreground="White" materialDesign:TextFieldAssist.UnderlineBrush="#C94AA3"/>
                                    <Button x:Name="ChangeLobbyNames_Button" Content="Change Lobby Names" Width="184" Height="27" Margin="0,10,0,0" HorizontalAlignment="Left" BorderThickness="0" Click="changeEveryoneName">
                                        <Button.Background>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                                <GradientStop Color="#491ab8" Offset="0.0"/>
                                                <GradientStop Color="#ec57a6" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Button.Background>
                                    </Button>
                                    <Label Content="(Host Only, changes on meetings)" Foreground="LightGray" FontSize="12" HorizontalAlignment="Center" FontFamily="roboto thin"/>

                                </StackPanel>

                            </Grid>
                            <Label Content="(Color Selector For Change Lobby Color)" Foreground="LightGray" FontSize="12" HorizontalAlignment="Center" FontFamily="roboto thin" Margin="-240,10,0,0"/>

                        </StackPanel>
                    </TabItem>

                    <!--Map Tab Items-->
                    <TabItem Width="0" Height="0">
                        <StackPanel>
                            <TextBlock Text="Map" FontSize="36" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>

                            <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <StackPanel Grid.Column="0">

                                <!--Map Settings-->
                                <TextBlock Text="Map Settings" FontSize="24" Margin="0,15,0,0" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>

                                <Grid Margin="-20,0,0,0">
                                    <TextBlock Text="No Clip" Foreground="White" Margin="115,10,10,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14" FontFamily="roboto thin"/>
                                    <ToggleButton x:Name="NoClipToggle" Margin="120,10,0,0" Checked="NoClipToggle_Checked" Unchecked="NoClipToggle_Unchecked"/>
                                </Grid>

                                <Grid Margin="-20,-5,0,0">
                                    <TextBlock Text="No Shadow/Fog" Foreground="White" Margin="60,10,10,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14" FontFamily="roboto thin"/>
                                    <ToggleButton x:Name="NoShadowToggle" Margin="120,10,0,0" Checked="NoShadowToggle_Checked" Unchecked="NoShadowToggle_Unchecked"/>
                                </Grid>

                                <Grid Margin="-20,-5,0,0">
                                    <TextBlock Text="Multiple Sabotages" Foreground="White" Margin="45,10,10,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14" FontFamily="roboto thin"/>
                                    <ToggleButton x:Name="InfiniteSabotageToggle" Margin="120,10,0,0" Checked="InfSabotage_Checked" Unchecked="InfSabotage_Unchecked"/>
                                </Grid>
                                <Label Content="(Host Only)" Foreground="LightGray" FontSize="12" Margin="60,0,0,0" FontFamily="roboto thin"/>

                                <!--Animations-->
                                <TextBlock Text="Animations" FontSize="24" Margin="0,35,0,0" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>

                                <Button x:Name="MedbayScanButton" Content="Medbay Scan" Width="150" Height="27" Margin="0,20,0,0" BorderThickness="0" Click="MedbayScanButton_Click">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>

                                <Button x:Name="TrashButton" Content="Empty Garbage" Width="150" Height="27" Margin="0,10,0,0" BorderThickness="0" Click="TrashButton_Click">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>

                                <Button x:Name="WeaponsButton" Content="Weapons" Width="150" Height="27" Margin="0,10,0,0" BorderThickness="0" Click="WeaponsButton_Click">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>
                            </StackPanel>

                            <StackPanel Grid.Column="1">

                                <!--Sabotages-->
                                <TextBlock Text="Sabotages" FontSize="24" Margin="0,15,0,0" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>
                                <Button x:Name="SabotageLights" Content="Lights" Width="150" Height="27" Margin="0,10,0,0" BorderThickness="0" Click="SabotageLights_Click">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="SabotageCommunications" Content="Communications" Width="150" Height="27" Margin="0,10,0,0" BorderThickness="0" Click="SabotageCommunications_Click">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="SabotageO2" Content="O2" Width="150" Height="27" Margin="0,10,0,0" BorderThickness="0" Click="SabotageO2_Click">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="SabotageReactor" Content="Reactor" Width="150" Height="27" Margin="0,10,0,0" BorderThickness="0" Click="SabotageReactor_Click">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                            <GradientStop Color="#491ab8" Offset="0.0"/>
                                            <GradientStop Color="#ec57a6" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>
                                
                            </StackPanel>
                        </Grid>
                        </StackPanel>
                    </TabItem>

                    <!--Game Tab Items-->
                    <TabItem Width="0" Height="0">
                        <StackPanel>
                            <TextBlock Text="Game" FontSize="36" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>

                            <Button x:Name="RemoveBan" Content="Remove Ban Timer" Width="150" Height="27" Margin="0,100,0,0" BorderThickness="0" Click="RemoveBan_Click">
                                <Button.Background>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                        <GradientStop Color="#491ab8" Offset="0.0"/>
                                        <GradientStop Color="#ec57a6" Offset="1"/>
                                    </LinearGradientBrush>
                                </Button.Background>
                            </Button>
                            <Label Content="(Game Restart Required)" Foreground="LightGray" FontSize="12" HorizontalAlignment="Center" FontFamily="roboto thin" Margin="0,0,0,0"/>
                            
                        </StackPanel>
                    </TabItem>

                    <!--Stats Tab Items-->
                    <TabItem Width="0" Height="0">
                        <StackPanel>
                            
                            <TextBlock Text="Stats" FontSize="36" HorizontalAlignment="Center" Foreground="White" FontFamily="Roboto Thin"/>
                            
                            <Grid>
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!--column 1-->
                                <StackPanel Grid.Column="0">
                                    
                                    <!--Player 1 Stats-->
                                    <Border x:Name="P1Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player1Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player1Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p1Color" Width="9" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>

                                    <!--Player 2 Stats-->
                                    <Border x:Name="P2Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player2Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player2Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p2Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>

                                    <!--Player 3 Stats-->
                                    <Border x:Name="P3Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player3Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player3Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p3Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>

                                <!--column 2-->
                                <StackPanel Grid.Column="1">

                                    <!--Player 4 Stats-->
                                    <Border x:Name="P4Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player4Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player4Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p4Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>

                                    <!--Player 5 Stats-->
                                    <Border x:Name="P5Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player5Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player5Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p5Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>

                                    <!--Player 6 Stats-->
                                    <Border x:Name="P6Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player6Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player6Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p6Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>

                                    <!--Player 10 Stats-->
                                    <Border x:Name="P10Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player10Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player10Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p10Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>

                                <!--column 3-->
                                <StackPanel Grid.Column="2">

                                    <!--Player 7 Stats-->
                                    <Border x:Name="P7Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player7Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player7Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p7Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>

                                    <!--Player 8 Stats-->
                                    <Border x:Name="P8Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player8Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player8Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p8Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>

                                    <!--Player 9 Stats-->
                                    <Border x:Name="P9Stat" Width="120" Height="60" Margin="0,10,0,0" Background="Gray" CornerRadius="15" BorderThickness="1" BorderBrush="Black">
                                        <StackPanel>
                                            <TextBlock x:Name="Player9Name" Text="Player 1" Foreground="White" FontSize="16" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="Player9Role" Text="Crewmate" FontSize="21" HorizontalAlignment="Center" Margin="0,3,0,0"/>
                                            <Border x:Name="p9Color" Width="7.5" Height="54" HorizontalAlignment="Left" Margin="-0.6,-58,0,0" CornerRadius="15,0,0,15"/>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>

                            </Grid>
                        </StackPanel>
                    </TabItem>

                </TabControl>
            </StackPanel>
        </Grid>

    </Border>

</Window>
